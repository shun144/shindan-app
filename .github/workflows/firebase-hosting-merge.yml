# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - master
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # リポジトリのコードを取得するための公式アクション(GitHub Actionsでジョブを実行する前に、リポジトリの内容をローカルにクローン)
      - uses: actions/checkout@v4

      # 依存関係をクリーンにインストール
      - run: npm ci

        # GitHub SecretsからFirebaseの設定情報を取得
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_APP_FIREBASE_STORAGE_BUCKET }}
          VITE_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_APP_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_APP_FIREBASE_APP_ID: ${{ secrets.VITE_APP_FIREBASE_APP_ID }}

      # アプリケーションをビルド
      - run: npm run build

      # Firebase Hostingにデプロイ
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          # GitHubリポジトリのトークンを利用して、Firebaseへデプロイ権限を付与
          repoToken: ${{ secrets.GITHUB_TOKEN }}

          # Firebaseプロジェクトのサービスアカウント情報をGitHub Secretsから取得
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SHINDAN_APP }}

          # Firebase Hostingの「ライブ」チャンネル（本番環境）にデプロイするよう指定
          channelId: live

          # FirebaseプロジェクトIDを指定
          projectId: shindan-app
